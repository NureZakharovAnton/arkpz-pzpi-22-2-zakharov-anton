Міністерство освіти і науки України
Харківський національний університет радіоелектроніки
Кафедра програмної інженерії

Звіт
З дисципліни «Аналіз та рефакторинг коду»
З лабораторної роботи №1

Виконавець:
ст. гр. ПЗПІ-22-2 Захаров А. В.

Перевірив:
доц. каф. ПІ Сокорчук І. П.

Харків 2024

Назва проекту: Програмна система для замовлення послуг з контролем їх виконання

Хід роботи
У процесі розробки програмної системи для замовлення послуг з контролем їх виконання, було здійснено низку етапів, від аналізу вимог до впровадження функціональних можливостей системи.

ВИСНОВКИ
У результаті виконаної роботи була розроблена програмна система, яка дозволяє користувачам зручно замовляти послуги та контролювати їх виконання. Система забезпечує автоматизацію процесів замовлення, оплати та моніторингу виконання послуг, що значно спрощує взаємодію між клієнтами та постачальниками послуг.

Додаток А
Vision and Scope Document

1. Передумови
1.1. Актуальність проблеми
В умовах сучасного ринку існує потреба в зручному способі замовлення послуг з можливістю контролю за їх виконанням. Клієнти хочуть швидко знайти підходящих постачальників послуг, замовити їх та бути впевненими в тому, що послуга буде виконана якісно і вчасно. Програмна система дозволяє автоматизувати цей процес, забезпечуючи зручність для користувачів і контроль за виконанням послуг.

1.2. Аналіз аналогічних рішень
TaskRabbit
TaskRabbit — це платформа для пошуку фрілансерів для виконання різних послуг, від дрібних побутових завдань до великих проектів.
Переваги:
• Велика кількість доступних фрілансерів.
• Різноманітні види послуг.
• Висока безпека завдяки відгукам користувачів.
Недоліки:
• Високі комісії за послуги.
• Затримки у виконанні завдань через великий попит.

Upwork
Upwork — онлайн платформа для фрілансерів, яка дозволяє замовникам знаходити спеціалістів для виконання послуг у різних сферах.
Переваги:
• Велика база фрілансерів.
• Вбудована система контролю за виконанням робіт.
Недоліки:
• Платформа вимагає складної реєстрації.
• Високі комісії.

2. Vision of the Solution
2.1. Призначення системи
Програмна система призначена для автоматизації процесу замовлення послуг з можливістю контролю їх виконання. Система забезпечує зручний процес пошуку, замовлення та виконання послуг, а також моніторинг їх виконання в реальному часі.

2.2. Опис бізнес логіки системи
Реєстрація та вхід користувача
Користувач може створити акаунт через електронну пошту або соціальні мережі. Після реєстрації він отримує доступ до всіх функцій платформи: пошук послуг, замовлення, оплата та контроль виконання.

Пошук послуг
Користувач може вибрати послугу за різними критеріями: тип послуги, ціна, місцезнаходження, рейтинг постачальника.

Замовлення послуг
Після вибору послуги користувач заповнює форму замовлення та вказує терміни виконання. Платформа перевіряє доступність постачальників послуг і надає можливість підтвердити замовлення.

Контроль виконання послуг
Користувач може в реальному часі стежити за виконанням послуги, отримувати статуси виконання та спілкуватися з постачальником через платформу.

Оплата та завершення
Після виконання послуги користувач здійснює оплату через інтегровані платіжні системи.

3. Scope and Limitations
3.1. Реалізація, опис серверної частини
Реєстрація та автентифікація користувачів
Користувачі можуть реєструватися через API з використанням email та паролю. Для безпеки використовується JWT для автентифікації.

Управління послугами
Адміністратори додають, редагують та видаляють інформацію про доступні послуги. Користувачі можуть переглядати та фільтрувати послуги через API.

Замовлення послуг
Користувач може створювати замовлення через інтерфейс API, де система перевіряє наявність постачальників послуг на потрібні дати.

Оплата та транзакції
Інтеграція з платіжними системами, такими як Stripe, дозволяє здійснювати безпечні платежі.

Моніторинг виконання
Система дозволяє користувачам переглядати статус виконання замовлених послуг через API.

3.2. Використані технології
Backend:
• Node.js — основна мова для серверної частини.
• NestJS — фреймворк для побудови масштабованих додатків.
• MongoDB — база даних для зберігання інформації про користувачів, послуги та замовлення.
• Mongoose — ORM для роботи з MongoDB.
• Class-Transformer та Class-Validator — для трансформації та валідації даних.
• JWT — для авторизації користувачів.

Frontend (Web):
• React — бібліотека для створення інтерфейсу.
• Redux/Redux Toolkit — для управління станом.
• RTK Query — для обробки запитів до API.
• Formik та Yup — для роботи з формами.
• Material UI — для стилізації інтерфейсу.

Mobile (React Native):
• React Native — для розробки мобільного додатку.
• Redux та Redux Toolkit — для управління станом мобільного додатку.
• Formik та Yup — для роботи з формами.
• React Native Material — для стилізації інтерфейсу.